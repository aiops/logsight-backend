{"version":3,"file":"ngx-highlight-js.umd.js","sources":["../../lib/src/highlight-js.config.ts","../../lib/src/highlight-js.directive.ts","../../lib/src/highlight-js.module.ts","../../lib/ngx-highlight-js.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface HighlightJsConfig {\n  /**\n   * Specify rendering mode\n   * - `default` Will render each `<pre><code>`\n   * - `simple` Render all content according to `lang` language\n   */\n  mode?: 'default' | 'simple';\n  /**\n   * Uses language detection by default but you can specify the language\n   */\n  lang?: string;\n  /**\n   * Equar [configure(options)](http://highlightjs.readthedocs.io/en/latest/api.html#configure-options)\n   */\n  options?: any;\n}\n\nexport const HIGHLIGHTJS_CONFIG = new InjectionToken<HighlightJsConfig>('HighlightJs-Config');\n","import { Directive, ElementRef, Input, OnDestroy, AfterViewInit, Inject, Optional } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { NgModel } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { HighlightJsConfig, HIGHLIGHTJS_CONFIG } from './highlight-js.config';\n\ndeclare const hljs: any;\n\n@Directive({\n  selector: '[highlight-js]',\n  host: {\n    '[style.display]': `mode === 'simple' ? 'none' : null`,\n  },\n  exportAs: 'highlightJs',\n})\nexport class HighlightJsDirective implements AfterViewInit, OnDestroy {\n  @Input() options: any;\n  @Input() lang = 'html';\n  @Input() code!: string;\n  @Input() mode: 'default' | 'simple' = 'simple';\n\n  protected codeEl?: HTMLElement;\n  protected parentEl!: HTMLElement;\n  private modelValue$?: Subscription;\n  private observer!: MutationObserver;\n\n  constructor(\n    private el: ElementRef<HTMLElement>,\n    @Optional() private ngModel: NgModel,\n    @Inject(DOCUMENT) private doc: any,\n    @Optional() @Inject(HIGHLIGHTJS_CONFIG) cog: HighlightJsConfig,\n  ) {\n    Object.assign(this, cog);\n  }\n\n  private escapeHTML(str: string): string {\n    return (str || '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;');\n  }\n\n  private init(): void {\n    this.destroy();\n    const el = this.el.nativeElement;\n    const code = this.code || '' + el.innerHTML.trim();\n    this.codeEl = this.doc.createElement(this.mode === 'default' ? 'div' : 'pre') as HTMLElement;\n    const isSimple = this.mode === 'simple';\n    if (isSimple) {\n      if (this.lang) {\n        this.codeEl.className = this.lang;\n      }\n      this.parentEl = el.parentNode as HTMLElement;\n      this.parentEl.insertBefore(this.codeEl, el.nextSibling);\n    } else {\n      this.parentEl = el;\n      this.parentEl.innerHTML = ``;\n      this.parentEl.appendChild(this.codeEl);\n    }\n    this.codeEl.innerHTML = code;\n    hljs.configure({ ...this.options });\n\n    if (isSimple) {\n      hljs.highlightBlock(this.codeEl);\n    } else {\n      this.codeEl.querySelectorAll('pre code').forEach((block) => {\n        hljs.highlightBlock(block);\n      });\n    }\n  }\n\n  private destroy(): void {\n    if (this.codeEl && this.parentEl) {\n      this.parentEl.removeChild(this.codeEl);\n      this.codeEl = undefined;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.init();\n    if (this.ngModel) {\n      this.modelValue$ = this.ngModel.valueChanges?.subscribe((res) => {\n        this.code = this.escapeHTML(res);\n        this.init();\n      });\n    } else {\n      this.initMutation();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy();\n    this.destroyMutation();\n    if (this.modelValue$) {\n      this.modelValue$.unsubscribe();\n    }\n  }\n\n  private initMutation(): void {\n    if (typeof MutationObserver === 'undefined') {\n      return;\n    }\n    this.observer = new MutationObserver(this.init.bind(this));\n    this.observer.observe(this.el.nativeElement, {\n      characterData: true,\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  private destroyMutation(): void {\n    if (!this.observer) {\n      return;\n    }\n    this.observer.disconnect();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HighlightJsDirective } from './highlight-js.directive';\n\n@NgModule({\n  imports: [FormsModule],\n  declarations: [HighlightJsDirective],\n  exports: [HighlightJsDirective],\n})\nexport class HighlightJsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["InjectionToken","Directive","ElementRef","NgModel","Optional","Inject","DOCUMENT","Input","NgModule","FormsModule"],"mappings":"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"}