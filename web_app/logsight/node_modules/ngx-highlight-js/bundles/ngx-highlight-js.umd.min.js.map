{"version":3,"sources":["../../lib/src/highlight-js.config.ts","../../lib/src/highlight-js.directive.ts","../../lib/src/highlight-js.module.ts"],"names":["HIGHLIGHTJS_CONFIG","InjectionToken","HighlightJsDirective","el","ngModel","doc","cog","this","lang","mode","Object","assign","prototype","escapeHTML","str","replace","init","destroy","nativeElement","code","innerHTML","trim","codeEl","createElement","isSimple","className","parentEl","parentNode","insertBefore","nextSibling","appendChild","hljs","configure","options","highlightBlock","querySelectorAll","forEach","block","removeChild","undefined","ngAfterViewInit","_this","modelValue$","_a","valueChanges","subscribe","res","initMutation","ngOnDestroy","destroyMutation","unsubscribe","MutationObserver","observer","bind","observe","characterData","childList","subtree","disconnect","Directive","args","selector","host","[style.display]","exportAs","ElementRef","NgModel","decorators","type","Optional","Inject","DOCUMENT","Input","NgModule","imports","FormsModule","declarations","exports"],"mappings":"0bAmBaA,EAAqB,IAAIC,EAAAA,eAAkC,mCCOtE,SAAAC,EACUC,EACYC,EACMC,EACcC,GAHhCC,KAAAJ,GAAAA,EACYI,KAAAH,QAAAA,EACMG,KAAAF,IAAAA,EAZnBE,KAAAC,KAAO,OAEPD,KAAAE,KAA6B,SAapCC,OAAOC,OAAOJ,KAAMD,UAGdJ,EAAAU,UAAAC,WAAA,SAAWC,GACjB,OAAQA,GAAO,IAAIC,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,WAGtHb,EAAAU,UAAAI,KAAA,WACNT,KAAKU,UACL,IAAMd,EAAKI,KAAKJ,GAAGe,cACbC,EAAOZ,KAAKY,MAAQ,GAAKhB,EAAGiB,UAAUC,OAC5Cd,KAAKe,OAASf,KAAKF,IAAIkB,cAA4B,YAAdhB,KAAKE,KAAqB,MAAQ,OACvE,IAAMe,EAAyB,WAAdjB,KAAKE,KAClBe,GACEjB,KAAKC,OACPD,KAAKe,OAAOG,UAAYlB,KAAKC,MAE/BD,KAAKmB,SAAWvB,EAAGwB,WACnBpB,KAAKmB,SAASE,aAAarB,KAAKe,OAAQnB,EAAG0B,eAE3CtB,KAAKmB,SAAWvB,EAChBI,KAAKmB,SAASN,UAAY,GAC1Bb,KAAKmB,SAASI,YAAYvB,KAAKe,SAEjCf,KAAKe,OAAOF,UAAYD,EACxBY,KAAKC,UAAStB,OAAAC,OAAA,GAAMJ,KAAK0B,UAErBT,EACFO,KAAKG,eAAe3B,KAAKe,QAEzBf,KAAKe,OAAOa,iBAAiB,YAAYC,SAAQ,SAACC,GAChDN,KAAKG,eAAeG,OAKlBnC,EAAAU,UAAAK,QAAA,WACFV,KAAKe,QAAUf,KAAKmB,WACtBnB,KAAKmB,SAASY,YAAY/B,KAAKe,QAC/Bf,KAAKe,YAASiB,IAIlBrC,EAAAU,UAAA4B,gBAAA,WAAA,MAAAC,EAAAlC,KACEA,KAAKS,OACDT,KAAKH,QACPG,KAAKmC,YAAuC,QAA5BC,EAAGpC,KAAKH,QAAQwC,oBAAY,IAAAD,OAAA,EAAAA,EAAEE,WAAU,SAACC,GACvDL,EAAKtB,KAAOsB,EAAK5B,WAAWiC,GAC5BL,EAAKzB,UAGPT,KAAKwC,gBAIT7C,EAAAU,UAAAoC,YAAA,WACEzC,KAAKU,UACLV,KAAK0C,kBACD1C,KAAKmC,aACPnC,KAAKmC,YAAYQ,eAIbhD,EAAAU,UAAAmC,aAAA,WAC0B,oBAArBI,mBAGX5C,KAAK6C,SAAW,IAAID,iBAAiB5C,KAAKS,KAAKqC,KAAK9C,OACpDA,KAAK6C,SAASE,QAAQ/C,KAAKJ,GAAGe,cAAe,CAC3CqC,eAAe,EACfC,WAAW,EACXC,SAAS,MAILvD,EAAAU,UAAAqC,gBAAA,WACD1C,KAAK6C,UAGV7C,KAAK6C,SAASM,uCAvGjBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,KAAM,CACJC,kBAAmB,qCAErBC,SAAU,2DAbQC,EAAAA,kBAEXC,EAAAA,QAAOC,WAAA,CAAA,CAAAC,KA0BXC,EAAAA,2CACAC,EAAAA,OAAMV,KAAA,CAACW,EAAAA,4CACPF,EAAAA,UAAQ,CAAAD,KAAIE,EAAAA,OAAMV,KAAA,CAAC5D,yCAdrBwE,EAAAA,oBACAA,EAAAA,oBACAA,EAAAA,oBACAA,EAAAA,eCVH,iCALCC,EAAAA,SAAQb,KAAA,CAAC,CACRc,QAAS,CAACC,EAAAA,aACVC,aAAc,CAAC1E,GACf2E,QAAS,CAAC3E","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface HighlightJsConfig {\n  /**\n   * Specify rendering mode\n   * - `default` Will render each `<pre><code>`\n   * - `simple` Render all content according to `lang` language\n   */\n  mode?: 'default' | 'simple';\n  /**\n   * Uses language detection by default but you can specify the language\n   */\n  lang?: string;\n  /**\n   * Equar [configure(options)](http://highlightjs.readthedocs.io/en/latest/api.html#configure-options)\n   */\n  options?: any;\n}\n\nexport const HIGHLIGHTJS_CONFIG = new InjectionToken<HighlightJsConfig>('HighlightJs-Config');\n","import { Directive, ElementRef, Input, OnDestroy, AfterViewInit, Inject, Optional } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { NgModel } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { HighlightJsConfig, HIGHLIGHTJS_CONFIG } from './highlight-js.config';\n\ndeclare const hljs: any;\n\n@Directive({\n  selector: '[highlight-js]',\n  host: {\n    '[style.display]': `mode === 'simple' ? 'none' : null`,\n  },\n  exportAs: 'highlightJs',\n})\nexport class HighlightJsDirective implements AfterViewInit, OnDestroy {\n  @Input() options: any;\n  @Input() lang = 'html';\n  @Input() code!: string;\n  @Input() mode: 'default' | 'simple' = 'simple';\n\n  protected codeEl?: HTMLElement;\n  protected parentEl!: HTMLElement;\n  private modelValue$?: Subscription;\n  private observer!: MutationObserver;\n\n  constructor(\n    private el: ElementRef<HTMLElement>,\n    @Optional() private ngModel: NgModel,\n    @Inject(DOCUMENT) private doc: any,\n    @Optional() @Inject(HIGHLIGHTJS_CONFIG) cog: HighlightJsConfig,\n  ) {\n    Object.assign(this, cog);\n  }\n\n  private escapeHTML(str: string): string {\n    return (str || '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;');\n  }\n\n  private init(): void {\n    this.destroy();\n    const el = this.el.nativeElement;\n    const code = this.code || '' + el.innerHTML.trim();\n    this.codeEl = this.doc.createElement(this.mode === 'default' ? 'div' : 'pre') as HTMLElement;\n    const isSimple = this.mode === 'simple';\n    if (isSimple) {\n      if (this.lang) {\n        this.codeEl.className = this.lang;\n      }\n      this.parentEl = el.parentNode as HTMLElement;\n      this.parentEl.insertBefore(this.codeEl, el.nextSibling);\n    } else {\n      this.parentEl = el;\n      this.parentEl.innerHTML = ``;\n      this.parentEl.appendChild(this.codeEl);\n    }\n    this.codeEl.innerHTML = code;\n    hljs.configure({ ...this.options });\n\n    if (isSimple) {\n      hljs.highlightBlock(this.codeEl);\n    } else {\n      this.codeEl.querySelectorAll('pre code').forEach((block) => {\n        hljs.highlightBlock(block);\n      });\n    }\n  }\n\n  private destroy(): void {\n    if (this.codeEl && this.parentEl) {\n      this.parentEl.removeChild(this.codeEl);\n      this.codeEl = undefined;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.init();\n    if (this.ngModel) {\n      this.modelValue$ = this.ngModel.valueChanges?.subscribe((res) => {\n        this.code = this.escapeHTML(res);\n        this.init();\n      });\n    } else {\n      this.initMutation();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy();\n    this.destroyMutation();\n    if (this.modelValue$) {\n      this.modelValue$.unsubscribe();\n    }\n  }\n\n  private initMutation(): void {\n    if (typeof MutationObserver === 'undefined') {\n      return;\n    }\n    this.observer = new MutationObserver(this.init.bind(this));\n    this.observer.observe(this.el.nativeElement, {\n      characterData: true,\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  private destroyMutation(): void {\n    if (!this.observer) {\n      return;\n    }\n    this.observer.disconnect();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HighlightJsDirective } from './highlight-js.directive';\n\n@NgModule({\n  imports: [FormsModule],\n  declarations: [HighlightJsDirective],\n  exports: [HighlightJsDirective],\n})\nexport class HighlightJsModule {}\n"]}